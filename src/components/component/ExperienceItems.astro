---
import { getLangFromUrl, useTranslations } from '@/i18n/utils';

const lang = getLangFromUrl(Astro.url); // Obtener el idioma de la URL
const t = useTranslations(lang); // Obtener la función de traducción


const {title, position, url, startDate, endDate,  description } = Astro.props;

---

<div class="experience-item">
    <div class="dot"></div>
    <div class="header-container toggle-btn">
        <div>
            <h3>{title}</h3>
            <h4>{position}</h4>
        </div>
        <time>{endDate ? `${startDate} - ${endDate}` : startDate}</time>
    </div>
    <div class="collapse">
        <ul>
            {description.map((item: string) => <li>{item}</li>)}
        </ul>

        {url && <a href={url} target="_blank">Link</a>}
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const items = document.querySelectorAll('.experience-item');

        const observerOptions = {
        root: null,
        threshold: 0.5,
        };

        const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            const dot = entry.target.querySelector('.dot');
            if (dot && dot instanceof HTMLElement) {
            if (entry.isIntersecting) {
                dot.classList.add('active-dot');
            } else {
                dot.classList.remove('active-dot');
            }
            }
        });
        }, observerOptions);

        items.forEach((item) => {
        observer.observe(item);

        const header = item.querySelector('.toggle-btn');
        const collapse = item.querySelector('.collapse');

        if (header && collapse && collapse instanceof HTMLElement) {
            header.addEventListener('click', () => {
            if (collapse.classList.contains('open')) {
                collapse.style.maxHeight = collapse.scrollHeight + 'px';
                requestAnimationFrame(() => {
                collapse.style.maxHeight = '0';
                });
                collapse.classList.remove('open');
            } else {
                collapse.style.maxHeight = collapse.scrollHeight + 'px';
                collapse.classList.add('open');
            }
            });
        }
        });
    });
</script>

<style>
    .experience-item {
        position: relative;
        padding: 25px 0;
        background: linear-gradient(#13151a, #13151a) padding-box,
              linear-gradient(145deg, transparent 35%,#e81cff, #40c9ff) border-box;
        border: 2px solid transparent;
        border-radius: 8px;
        transition: all 0.6s cubic-bezier(0.23, 1, 0.320, 1);
        padding: 20px 10px;
    }
    
    .dot {
        position: absolute;
        width: 0.75rem;
        height: 0.75rem;
        background-image: linear-gradient(225deg, #ff3caa70 50%, #ff3caa70 50%);
        transform: scale(1.1);
        border-radius: 50%;       
        left: -49px;
        margin-top: 0.375rem;
    }

    .active-dot {
    background-color: #fb4ea1;
    transform: scale(1.3); /* Le dará un efecto visual más destacado */
    box-shadow: 0 0 10px #fb4ea1, 0 0 20px #fb4ea1, 0 0 30px #ff8ed6; /* Añadir un brillo */
}
    
    .header-container{
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        flex-direction: column;
        margin-bottom: 4px;
    }

    .collapse {
        max-height: 0;
        overflow: hidden;
        transform: scaleY(0);
        transform-origin: top;
        transition: transform 0.3s ease;
    }

    .toggle-btn{
        cursor: pointer;
    }

    .collapse.open {
        transform: scaleY(1);
        max-height: none;
    }

    time {
        padding-bottom: 0.35rem;
        font-size: 0.875rem;
        color: #bababa;
    }
    
    h3, h4 {
        font-weight: 600;
        color: #f9fafb;
        padding-bottom: 0.30rem;
    }

    h4{
        font-weight: normal;
    }
    
    ul {
        color: #d1d5db; 
        line-height: 1.3rem;
        letter-spacing: 0.05rem;
        font-size: clamp(1rem, 0.9825rem + 0.0877vw, 1.125rem);
        padding-bottom: 10px;
        padding-left: 30px;
    }

    a{
        color: #FF3CAC;
        font-size: 1.090rem;
        padding-top: 15px;
        padding-left: 30px;
    }

    a:hover{
        color: #2B86C5;
        text-decoration: underline;
    }

    
    body.open .dot, body.open time, body.open h3, body.open h4, body.open p,  body.open a {
        display: none;
   }
</style>